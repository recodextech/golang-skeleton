# container config
APP_DEBUG=true

# logger config
LOG_COLORS=true
LOG_FILEPATH_ENABLED=true
LOG_PREFIX=golang_skeleton
LOG_LEVEL=TRACE

# application metrics
METRICS_SYSTEM=hailing
METRICS_SUBSYSTEM=golang_skeleton
METRICS_HTTP_PATH=metrics
METRICS_HTTP_HOST=:7001
METRICS_HTTP_SERVER_SHUTDOWN_WAIT=5s

# schema registry ConfigMap
SCHEMA_REGISTRY_URL=localhost:8081
SCHEMA_REGISTRY_SUBJECTS={}
SCHEMA_REGISTRY_SYNC_ENABLED="true"
SCHEMA_REGISTRY_SYNC_KAFKA_BROKERS=localhost:29092
SCHEMA_REGISTRY_SYNC_SCHEMA_TOPIC="_schemas"

# http server configs
HTTP_SERVER_HOST=:8888
HTTP_SERVER_TIMEOUTS_READ=60s
HTTP_SERVER_TIMEOUTS_READ_HEADER=60s
HTTP_SERVER_TIMEOUTS_WRITE=60s
HTTP_SERVER_TIMEOUTS_IDLE=60s
HTTP_SERVER_TIMEOUTS_SHUTDOWN=5s

# kafka ConfigMap
KAFKA_BOOTSTRAP_SERVERS=localhost:29092

# producer ConfigMap
PRODUCER_BOOTSTRAP_SERVERS=localhost:29092
PRODUCER_CLIENT_ID=services.golang-skeleton-producer

# streams configs
STREAMS_KAFKA_PRODUCER_ID= "services.hailing.golang-skeleton-producer"
STREAMS_K_STREAM_APPLICATION_ID= "services.hailing.golang-skeleton"
STREAMS_K_STREAM_STORES_PORT= ":9001"
STREAMS_K_STREAM_WORKER_POOL_WORKERS= "10"
STREAMS_K_STREAM_WORKER_POOL_BUFFER= "50"
STREAMS_K_STREAM_CHANGELOG_ENABLED= "false"
INTERNAL_TOPIC_CONFIGS={}
# k-router configs
HTTP_K_ROUTER_BOOTSTRAP_SERVERS=localhost:29092
HTTP_K_ROUTER_TOPIC="krouter.hailing.golang-skeleton"
HTTP_K_ROUTER_APPLICATION_ID="krouter.hailing.golang-skeleton"
HTTP_EXTERNAL_HEADERS="session-id"

# client config
HTTP_TIMEOUT_IN_SECONDS=5

RETRY_TIMEOUT_IN_SECONDS=30
RETRY_TICKER_IN_SECONDS=2
PPROF_ENABLED=true

# PATH=${PATH}